---
title: "tuneR"
format: html
editor: visual
---

Tune up your eukrhythmic, EukHeist, and EUKulele outputs in R.

# Overview


# eukrhythmic



# EukHeist

## Downloading Alexander MAGs

Install required libraries #https://github.com/ropensci/osfr


```{r}
# | message: false
# install.packages("osfr")
library(osfr)
library(tidyverse)
```

TOPAZ eukaryotic MAGs:

```{r}
topaz <- osf_retrieve_node("c9hj5")
# topaz
```

Initial set of MAGs from the Tara Oceans project processed with EukHeist can be found here: ```osf_open(topaz)```

TOPAZ prokaryotic MAGs

```{r}
topaz_prok <- osf_retrieve_node("n3v2c")
# topaz_prok
```

List all available files in eukaryotic TOPAZ MAGs.

```{r}
# topaz
topaz_euk_all <- osf_ls_files(topaz, 
             path = "Eukaryotic_TOPAZ_MAGs",
             # pattern = "IOS", # Option to isolate specific regions
             # n_max = 10, # Option to only print first 10 (default)
             n_max = 1000)

```
**topaz_euk_all** now has a list of all the eukaryotic TOPAZ MAGs

```{r}
topaz_prok <- osf_ls_files(topaz_prok, 
             path = "Prokaryotic_TOPAZ_MAGs",
             # pattern = "IOS", # Option to isolate specific regions
             # n_max = 10, # Option to only print first 10 (default)
             n_max = 1000)

```


### Example download

Isolate 2 files of eukaryotic MAGs from MES. Download to my test-download folder.

```{r}
#| eval: false
topaz_euk_NPS <- osf_ls_files(topaz, 
             path = "Eukaryotic_TOPAZ_MAGs",
             n_max = 10,
             pattern = "NPS")
# topaz_euk_NPS

# ?osf_ls_files

# Download to local directory
osf_download(
  topaz_euk_NPS,
  path = "topaz-mags/test-download/",
  recurse = FALSE,
  conflicts = "error",
  # verbose = FALSE,
  progress = FALSE
)
```

## Download highly complete eukaryotic MAGs

A text file lists the highly complete eukaryotic MAGs. We can extract this list to download only highly complete eukaryotic MAGs.

```{r}
osf_download(osf_ls_files(topaz,
                        path = "Eukaryotic_TOPAZ_MAGs",
                        pattern = "hqmags.txt"),
             path = ".",
             conflicts = "error",
             recurse = FALSE)

hc_mags <- read.delim("hqmags.txt", header = FALSE)
```

Get list of the 485 total highly complete MAGs.

```{r}
hc_mags_list <- as.character(hc_mags$V1)
# length(hc_mags_list)
```

```{r}
topaz_euk_HC <- topaz_euk_all %>% 
          filter(name %in% hc_mags_list)

# topaz_euk_HC
```

Download all highly complete eukaryotic MAGs

```{r}
#| eval: false
osf_download(
  topaz_euk_HC,
  path = "topaz-mags/highly-complete-mags",
  recurse = FALSE,
  conflicts = "error",
  progress = FALSE
)
```


## Download MAGs by taxa

Access supplementary data from EukHeist manuscript.

```{r}
supp <- osf_retrieve_node("twz2f")

osf_download(osf_ls_files(supp, 
                        pattern = "TableS02"),
        path = ".",
        conflicts = "error",
        recurse = FALSE)
```

```{r}
taxa_mags <- read.csv("TableS02_EukaryoticMAG.csv")
head(taxa_mags)
```

### Only download specific haptophyta MAGs

```{r}
haptophyta <- taxa_mags %>% 
  # filter(groups == "Haptophyta") %>% 
  filter(grepl("Prymnesiophyceae", eukulele_taxonomy))

prym_list <- as.character(haptophyta$X)
```

Select those topaz mags that are prymnesiophyceae and download.

```{r}
# | eval: false
osf_download(topaz_euk_all %>% 
          filter(name %in% prym_list),
          path = ".",
        conflicts = "error",
        recurse = FALSE)
```

## Explanation of downloaded files

Each downloaded directory contains the 
